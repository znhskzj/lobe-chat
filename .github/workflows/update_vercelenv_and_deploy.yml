name: Update Vercel Env and Deploy

on:
  schedule:
    - cron: '0 0 * * *' # 每天执行一次
  workflow_dispatch: # 手动触发

jobs:
  update-env-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Generate new access code
      id: generate-code
      run: |
        new_access_code=$(date +%Y%m%d%H%M%S | sha256sum | base64 | head -c 12)
        echo "new_access_code=$new_access_code" >> $GITHUB_ENV

    # 更新第一个 Vercel 项目的环境变量并重新部署
    - name: Update Vercel Project 1 environment variable
      env:
        VERCEL_PROJECT_ID_1: ${{ secrets.VERCEL_PROJECT_ID_1 }}
        VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
        NEW_ACCESS_CODE: ${{ env.new_access_code }}
      run: |
        curl -X PATCH "https://api.vercel.com/v8/projects/$VERCEL_PROJECT_ID_1/env?decrypt=true" \
          -H "Authorization: Bearer $VERCEL_API_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
            "type": "encrypted",
            "key": "access_code",
            "value": "'"$NEW_ACCESS_CODE"'",
            "target": ["production", "preview", "development"]
          }'

    - name: Trigger redeployment for Project 1
      env:
        VERCEL_PROJECT_ID_1: ${{ secrets.VERCEL_PROJECT_ID_1 }}
        VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
      run: |
        curl -X POST "https://api.vercel.com/v13/deployments" \
          -H "Authorization: Bearer $VERCEL_API_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{
            "project": "'$VERCEL_PROJECT_ID_1'",
            "forceNew": true
          }'

    # 继续添加更多项目，按照上面的模式
